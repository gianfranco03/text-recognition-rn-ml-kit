version: 2.1
jobs:
  node:
    working_directory: ~/text-recognition-rn-ml-kit
    docker:
      - image: cimg/node:12.13.0

    steps:
      - checkout

      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}

      - run:
          name: Installing modules
          command: yarn install

      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules

      - run:
          name: jest tests
          command: |
            mkdir -p test-results/jest
            yarn run test
          environment:
            JEST_JUNIT_OUTPUT: test-results/jest/junit.xml

      - persist_to_workspace:
          root: ~/text-recognition-rn-ml-kit
          paths:
            - node_modules

      - store_test_results:
          path: test-results

      - store_artifacts:
          path: test-results

  # macos-build-and-test:
  #   working_directory: ~/text-recognition-rn-ml-kit
  #   macos:
  #     xcode: 12.15.1
  #   environment:
  #     FL_OUTPUT_DIR: output
  #     FASTLANE_LANE: test

  #   steps:
  #     - checkout
  #     - restore_cache:
  #         key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}

  #     - restore_cache:
  #         key: node-v1-{{ checksum "package.json" }}-{{ arch }}

  #     - run: yarn install

  #     - save_cache:
  #         key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
  #         paths:
  #           - ~/.cache/yarn

  #     - save_cache:
  #         key: node-v1-{{ checksum "package.json" }}-{{ arch }}
  #         paths:
  #           - node_modules

  #     - restore_cache:
  #         key: bundle-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}

  #     #Pods directory is ignored to match default RN setup, but can also check them into source control
  #     #https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
  #     - restore_cache:
  #         key: pods-v1-{{ checksum "ios/Podfile.lock" }}-{{ arch }}

  #     - run:
  #         command: pod install
  #         working_directory: ios

  #     - run:
  #         command: bundle install
  #         working_directory: ios

  #     - save_cache:
  #         key: bundle-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}
  #         paths:
  #           - vendor/bundle

  #     - save_cache:
  #         key: pods-v1-{{ checksum "ios/Podfile.lock" }}-{{ arch }}
  #         paths:
  #           - ios/Pods

  #     - store_artifacts:
  #         path: output

  #     - store_test_results:
  #         path: output/scan

  android-build-and-test:
    working_directory: ~/text-recognition-rn-ml-kit/android
    docker:
      - image: circleci/android:api-30-node
    steps:
      - checkout:
          path: ~/text-recognition-rn-ml-kit

      - attach_workspace:
          at: ~/text-recognition-rn-ml-kit

      - restore_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}

      - run: bundle install

      - save_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle

      - store_test_results:
          path: test-results

      - store_artifacts:
          path: test-results

workflows:
  # node-android-ios:
  node-android:
    jobs:
      - node
      - android-build-and-test:
          requires:
            - node
      # - macos-build-and-test:
      #     requires:
      #       - node
